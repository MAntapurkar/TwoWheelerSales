# -*- coding: utf-8 -*-
"""TwoWheeler

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zt7fFWYNAuAu7ANifeSyTspO3aw8Oyny
"""

import pandas as pd
import numpy as np
import matplotlib
import matplotlib.pyplot as plt
import seaborn as sns
matplotlib.style.use('ggplot')

df = pd.read_excel("TWS.xlsx")

df.head()

df.describe()

df.isnull().mean()

plt.figure(figsize=(20,5))
sns.countplot(x = df['Maker'])
plt.xlabel('Vehical_Company')
plt.ylabel('Month')

plt.hist(df, edgecolor='black', bins=2)

df.corr

plt.figure(figsize=(12,12))
sns.heatmap(df.corr(), annot=True)
plt.show()

selected_column = ["Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb","March"]
x = df.loc[:,selected_column]

from sklearn.decomposition import PCA
pca = PCA().fit(x)

sum_df = pd.DataFrame({
    'Standard deviation': np.sqrt(pca.explained_variance_),
    'Proportion of Variance': pca.explained_variance_ratio_,
    'Cumulative Proportion': np.cumsum(pca.explained_variance_ratio_)
})
print(sum_df)

pca2 = PCA().fit(x)
pca_proj = pca.transform(x)

plt.scatter(pca_proj[:, 0], pca_proj[:, 1], c='grey')
plt.xlabel('PC1 ({:.2%})'.format(pca.explained_variance_ratio_[0]))
plt.ylabel('PC2 ({:.2%})'.format(pca.explained_variance_ratio_[1]))
plt.title('Principal Component Analysis of Two Wheeler Sales ')

plt.legend(['Data Points'])
plt.show()

from sklearn.cluster import KMeans
css = []

for k in range(1, 11):
    kmeans = KMeans(n_clusters=k, init='k-means++', random_state=42)
    kmeans.fit(pca_proj)
    css.append(kmeans.inertia_)

plt.plot(range(1, 11), css)
plt.title("Elbow Method") 
plt.xlabel("No of Clusters")
plt.ylabel("WCSS")
plt.show()

kmeans = KMeans(n_clusters=5, init='k-means++', random_state=0).fit(x)

df['cluster_num'] = kmeans.labels_
print("Cluster labels:", kmeans.labels_)
print("Within-cluster sum of squares (inertia):", kmeans.inertia_)
print("Number of iterations:", kmeans.n_iter_)
print("Cluster centers:", kmeans.cluster_centers_)

plt.figure(figsize=(8,5))
sns.countplot(x = df["cluster_num"], palette = 'Set1')
plt.xlabel("Cluster number")
plt.ylabel("Count")
plt.title("Distribution of data points among clusters")
plt.show()

plt.figure(figsize=(12, 8))
sns.boxplot(x='cluster_num', y='Maker', data=df, palette='husl')
plt.show()

"""Conclusion

From the above graph i.e. Distribution of data points among clusters vs counts it can be concluded that the Ev vehicle which comes under cluster-1 are more in demand in the market where as cluster number - 3 vehicles are less demand.
"""